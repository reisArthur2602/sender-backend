generator client {
  provider      = "prisma-client-js"
    binaryTargets = ["native", "windows", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Menu {
  id         String    @id @default(uuid())
  name       String    @unique
  reply      String    @db.Text
  isDefault  Boolean   @default(false)
  tags       String[]  @default([])
  options    Option[]
  matches    Match[]  
  createdAt  DateTime  @default(now())

  @@map("menus")
}
model Match {
  id         String   @id @default(uuid())
 leadJid    String
  menuId     String  
  createdAt  DateTime @default(now())
  lead       Lead     @relation(fields: [ leadJid ], references: [jid], onDelete: Cascade)
  menu       Menu     @relation(fields: [menuId], references: [id], onDelete: Cascade)

  @@map("matches")
}

model Option {
  id         String       @id @default(uuid())
  menu_id    String
  menu       Menu         @relation(fields: [menu_id], references: [id], onDelete: Cascade)
  label      String @db.Text
  trigger    Int
  reply      String @db.Text
  createdAt DateTime     @default(now())
  @@map("options")
}

model Lead {
  id         String    @id @default(uuid())
  name       String?
  jid        String    @unique
  messages   Message[]
  matches    Match[]   
  createdAt  DateTime  @default(now())

  @@map("leads")
}


enum MessageFrom {
  CUSTOMER
  SYSTEM
}

model Message {
  id         String       @id @default(uuid())
  from       MessageFrom
  text       String       @db.Text
  jid        String
  lead       Lead?        @relation(fields: [jid], references: [jid], onDelete: Cascade)
  createdAt  DateTime     @default(now())

  @@map("messages")
}





